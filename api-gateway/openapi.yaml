openapi: 3.0.1
info:
  title: Shwoop Adventure App
  description: "This is the backend for the Shwoop University of Auckland Adventure App"
  version: 1.0.0
paths:
  /maps:
    get:
      summary: "Gets all available maps"
      operationId: get_maps
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MapSummary'
  /maps/{map}:
    get:
      summary: "Gets all markers for the given map"
      operationId: get_map
      parameters:
      - name: map
        in: path
        description: "Name of map"
        schema:
          type: string
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
        404:
          description: "map not found"
  /maps/{map}/beacons/{beacon}:
    get:
      summary: "Attempts to get information about the given beacon"
      operationId: get_beacon
      parameters:
      - name: map
        in: path
        description: "Name of map"
        schema:
          type: string
        required: true
      - name: beacon
        in: path
        description: "ID of the beacon"
        schema:
          type: string
        required: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beacon'
        404:
          description: "map or beacon not found"

  # TODO: Decide whether to put this under {user} or under {map}, whether to make a new resource under an endpoint, etc.
  /maps/{map}/challenge:
    post:
      summary: "Start a new challenge"
      operationId: start_challenge
      parameters:
      - name: map
        in: path
        description: "The current map"
        schema:
          type: string
        required: true
      - name: beacon
        in: query
        description: "Beacon that the challenge was started from"
        schema:
          type: string
        required: false
      - name: marker
        in: query
        description: "Marker the challenge was started from"
        schema:
          type: number
        required: false
      security:
        - User: []
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Puzzle'
        404:
          description: "map or beacon not found"
          content: {}
    delete:
      summary: "Stop a challenge"
      operationId: stop_challenge
      parameters:
      - name: map
        in: path
        description: "The current map"
        schema:
          type: string
        required: true
      - name: challenge
        in: query
        description: "The id of the challenge being completed"
        schema:
          type: string
        required: true
      security:
        - User: []
      responses:
        204:
          description: "successful operation"
        404:
          description: "map or beacon not found, or challenge not started"
          content: {}
  /maps/{map}/challenge/finish:
    post:
      summary: "Attempt to complete a challenge"
      operationId: finish_challenge
      parameters:
      - name: map
        in: path
        description: "The current map"
        schema:
          type: string
        required: true
      - name: challenge
        in: query
        description: "The id of the challenge being completed"
        schema:
          type: string
        required: true
      security:
      - User: []
      requestBody:
        description: "Contains the beacon of the guessed solution"
        content:
          application/json:
            schema:
              type: object
              properties:
                beacon_id:
                  type: string
      responses:
        200:
          description: "Successfully solved puzzle"
          content:
            application/json:
              schema:
                type: object
                properties:
                  prize:
                    $ref: '#/components/schemas/Reward'
        204: # This or a 400 code?
          description: "Did not solve puzzle"
          content: {}
        400:
          description: "Input body incorrect. Need a valid beacon_id"
          content: {}
        404:
          description: "map not found, or challenge not started"
          content: {}

  # User stuff
  /users/{user}/prizes:
    get:
      summary: "Get previously claimed prizes"
      operationId: get_prizes
      parameters:
      - name: user
        in: path
        description: "The user requesting prizes"
        required: true
        schema:
          type: string
      security:
      - User: []
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prize'
  /users/{user}/prizes/{prize_type}/{date_recieved}:
    put:
      summary: "Redeem prize"
      operationId: redeem_prize
      parameters:
      - name: user
        in: path
        description: "The user who has this prize"
        required: true
        schema:
          type: string
      - name: prize_type
        in: path
        description: "The type of prize being redeemed"
        required: true
        schema:
          type: string
      - name: date_recieved
        in: path
        description: "The time at which this prize was awarded to the user"
        required: true
        schema:
          type: string
      security:
      - User: []
      responses:
        200:
          description: "Successful operation - prize is or was redeemed"
          content:
            application/json:
              schema:
                type: string
        404:
          description: "No prize of this type at this date for this user"
components:
  securitySchemes:
    User:
      type: http
      scheme: basic
    Admin:
      type: http
      scheme: basic
  schemas:
    MapSummary:
      type: object
      properties:
        image_url:
          type: string
          description: "Url of the map image"
        top_left:
          $ref: '#/components/schemas/Coordinate'
        bottom_right:
          $ref: '#/components/schemas/Coordinate'
    Map:
      type: object
      properties:
        markers:
          type: array
          items:
            $ref: '#/components/schemas/Marker'
    Puzzle:
      type: object
      properties:
        id:
          type: object
          description: "The id of the puzzle"
        text:
          type: string
          description: "Text of the puzzle"
        image_url:
          type: string
          description: "Url of an image related to the puzzle"
    Marker:
      type: object
      properties:
        id:
          type: integer
          description: Unique id
        location:
          $ref: '#/components/schemas/Coordinate'
        open:
          type: boolean
          default: false
          description: Whether the marker requires a connection to bluetooth (if it is open, no connection required)
      required: [id, location]
    Beacon:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Coordinate'
      oneOf:
      - type: object
        properties:
          beacon_type:
            type: string
            enum:
              - marker
          marker:
            type: integer
      - type: object
        properties:
          beacon_type:
            type: string
            enum:
              - treasure
          request_code:
            description: 'NOTE: This code is used to acquire a redemption code,
            and is not itself a redemption code. Thus this code could go unused,
            or be handed out to multiple users'
            type: string
      - type: object
        properties:
          beacon_type:
            type: string
            enum:
              - hidden
    Reward:
      type: object
      properties:
        type:
          type: string
          enum:
          - 'points'
          - 'red-bull'
        points:
          description: "Number of points recieved. Only present if type is 'points'"
          type: integer
          nullable: true
    Prize:
      type: object
      properties:
        type:
          type: string
    Coordinate:
      type: object
      properties:
        latitude:
          type: number
          format: double
          maximum: 180
          minimum: -180
        longitude:
          type: number
          format: double
          maximum: 180
          minimum: -180
