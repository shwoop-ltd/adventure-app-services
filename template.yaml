AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Globals:
  Function:
    Environment:
      Variables:
        REGION: ap-southeast-2
        TABLE_NAME: !Ref AdventureTable
        PRIZES_TABLE_NAME: !Ref PrizesTable
        USERS_TABLE_NAME: !Ref UsersTable
        TELEMETRY_TABLE_NAME: !Ref TelemetryTable
        ENDPOINT_OVERRIDE: ""
        ADMIN_KEY: "nW0xj7iN7bMAS1L7cyRB32sKDtNi2qmBi2sHed8qOPPAgkPI2qhjnt5VYTDPLt0z"
Resources:
  AdventureApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: alpha
      Name: AdventureApp
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            #Location: s3://adventure-app-cloudformation/openapi.yaml
            Location: ./api-gateway/openapi.yaml
  AdventureTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: AdventureApp
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  PrizesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: AdventureAppPrizes
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: AdventureAppUsers
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  TelemetryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: AdventureAppTelemetry
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 10
        ReadCapacityUnits: 1
      Tags:
        AppType: Serverless
  GetMaps:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-maps.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps
            Method: get
  GetMap:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-map.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}
            Method: get
  GetBeacon:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-beacon.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}/beacon/{beacon}
            Method: get
  GetPrizeTypes:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-prize-types.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /prizes
            Method: fet
  StartChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: start-challenge.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/challenge
            Method: post
  StopChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: stop-challenge.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/challenge
            Method: delete
  FinishChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: finish-challenge.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/challenge/finish
            Method: post
  GetTreasure:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-treasure.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/redeem-treasure
            Method: post
  GetPrize:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-prize.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: post
  DeletePrize:
    Type: AWS::Serverless::Function
    Properties:
      Handler: delete-prize.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: delete
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-user.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/
            Method: get
  GetUserPrizes:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-user-prizes.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/prizes
            Method: get
  RegisterUser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: register-user.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/
            Method: put
  GetSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-survey.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/survey
            Method: GET
  FinishSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Handler: finish-survey.handler
      Runtime: nodejs10.x
      CodeUri: ./lambda/.build/
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/survey/finish
            Method: post
