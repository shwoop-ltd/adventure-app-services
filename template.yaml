AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  Stage:
    Type: String
    AllowedValues:
    - Dev
    - Prod
    Description: The stage type to upload
Globals:
  Function:
    Environment:
      Variables:
        REGION: ap-southeast-2
        TABLE_NAME: !Ref AdventureTable
        PRIZES_TABLE_NAME: !Ref PrizesTable
        USERS_TABLE_NAME: !Ref UsersTable
        TELEMETRY_TABLE_NAME: !Ref TelemetryTable
        ENDPOINT_OVERRIDE: ""
        ADMIN_KEY: "nW0xj7iN7bMAS1L7cyRB32sKDtNi2qmBi2sHed8qOPPAgkPI2qhjnt5VYTDPLt0z"
Resources:
  AdventureApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: !Join ["-", ["AdventureApp", !Ref Stage]]
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: ./resources/openapi.yaml
  AdventureTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ["-", ["AdventureApp", !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  PrizesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ["-", ["AdventureAppPrizes", !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ["-", ["AdventureAppUsers", !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  TelemetryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ["-", ["AdventureAppTelemetry", !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 10
        ReadCapacityUnits: 1
      Tags:
        AppType: Serverless
  CommonCode:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: AdventureAppCommon
      Description: Common adventure app code
      ContentUri: ./build/_common
      CompatibleRuntimes: [nodejs10.x]
      RetentionPolicy: Delete
  GetMaps:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-maps
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps
            Method: get
  GetMap:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-map
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}
            Method: get
  GetBeacon:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-beacon
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}/beacon/{beacon}
            Method: get
  GetChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-challenge
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}/challenges/{type}/{type_id}
            Method: get
  GetPrizeTypes:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize-types/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /prize-types
            Method: get
  GetPrize:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: post
  DeletePrize:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize/delete
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: delete
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/
            Method: get
  RegisterUser:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/register
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/
            Method: put
  StartChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/start
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/challenge/{challengeid}
            Method: post
  StopChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/stop
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/challenge
            Method: delete
  FinishChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/finish
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/challenge
            Method: post
  GetTreasure:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get-treasure
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/redeem-treasure
            Method: post
  GetUserPrizes:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get-prizes
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/prizes
            Method: get
  GetSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/survey/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/surveys/new
            Method: get
  FinishSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/survey/finish
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref AdventureTable
      - DynamoDBCrudPolicy:
          TableName: !Ref PrizesTable
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - DynamoDBCrudPolicy:
          TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{userid}/surveys
            Method: post
