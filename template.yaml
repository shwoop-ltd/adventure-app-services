AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  Stage:
    Type: String
    AllowedValues:
      - Development
      - Production
    Description: The stage type to upload
Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        REGION: ap-southeast-2
        TABLE_NAME: !Ref AdventureTable
        PRIZES_TABLE_NAME: !Ref PrizesTable
        USERS_TABLE_NAME: !Ref UsersTable
        TELEMETRY_TABLE_NAME: !Ref TelemetryTable
        ENDPOINT_OVERRIDE: ''
        ADMIN_KEY: 'nW0xj7iN7bMAS1L7cyRB32sKDtNi2qmBi2sHed8qOPPAgkPI2qhjnt5VYTDPLt0z'
  Api:
    OpenApiVersion: '3.0.1'
Resources:
  AdventureApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: !Join ['-', ['AdventureApp', !Ref Stage]]
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: ./resources/openapi.yaml
      # this is invalidating the Template.yaml according to Sam Validate
      Auth:
        DefaultAuthorizer: CognitoUser
        Authorizers:
          CognitoUser: # TODO: Not hardcode
            UserPoolArn: arn:aws:cognito-idp:ap-southeast-2:020479359034:userpool/ap-southeast-2_UyvhAfzW8
            Identity:
              Header: Authorization
  AdventureTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ['-', ['AdventureApp', !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  PrizesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ['-', ['AdventureAppPrizes', !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ['-', ['AdventureAppUsers', !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      Tags:
        AppType: Serverless
  TelemetryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ['-', ['AdventureAppTelemetry', !Ref Stage]]
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        WriteCapacityUnits: 10
        ReadCapacityUnits: 1
      Tags:
        AppType: Serverless
  CommonCode:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: AdventureAppCommon
      Description: Common adventure app code
      ContentUri: ./build/_common
      CompatibleRuntimes: [nodejs10.x]
      RetentionPolicy: Delete
  GetMaps:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-maps
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps
            Method: get
            Auth:
              Authorizer: 'NONE'
  GetMap:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-map
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}
            Method: get
            Auth:
              Authorizer: None
  GetBeacon:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-beacon
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}/beacon/{beacon}
            Method: get
            Auth:
              Authorizer: None
  GetChallengePrizes:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/maps/get-challenge-prizes
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /maps/{map}/challenges/{id}/prizes
            Method: get
            Auth:
              Authorizer: None
  GetPrizeTypes:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize-types/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /prize-types
            Method: get
            Auth:
              Authorizer: None
  GetPrize:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: post
            Auth:
              Authorizer: None
  DeletePrize:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/prize/delete
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /redemption-codes/{code}/
            Method: delete
            Auth:
              Authorizer: None
  GetUsers:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get-all
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users
            Method: get
            Auth:
              Authorizer: None
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/
            Method: get
            Auth:
              Authorizer: CognitoUser
  RegisterUser:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/register
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/
            Method: post
            Auth:
              Authorizer: CognitoUser
  StartChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/start
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/challenge/{map}/{challenge_id}
            Method: post
            Auth:
              Authorizer: CognitoUser
  StopChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/stop
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/challenge
            Method: delete
            Auth:
              Authorizer: CognitoUser
  FinishChallenge:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/challenge/finish
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/challenge
            Method: post
            Auth:
              Authorizer: CognitoUser
  ClaimTreasure:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/claim-treasure
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/treasure/{map}/{beacon_id}
            Method: post
            Auth:
              Authorizer: CognitoUser
  GetUserPrizes:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/get-prizes
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/prizes
            Method: get
            Auth:
              Authorizer: CognitoUser
  GetSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/survey/get
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/surveys/new
            Method: get
            Auth:
              Authorizer: CognitoUser
  FinishSurvey:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs10.x
      CodeUri: ./build/user/survey/finish
      Handler: index.handler
      Layers:
        - !Ref CommonCode
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AdventureTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PrizesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TelemetryTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref AdventureApi
            Path: /users/{user_id}/surveys
            Method: post
            Auth:
              Authorizer: CognitoUser
